x-common-api-env: &common-env
  NATS_URL: nats://nats:4222
  DATABASE_USER: postgres
  DATABASE_PASSWORD: postgres
  DATABASE_HOSTNAME: psg
  DATABASE_PORT: 5432
  DATABASE_NAME: rinha
  PROCESSOR_DEFAULT_URL: http://payment-processor-default:8080
  PROCESSOR_FALLBACK_URL: http://payment-processor-fallback:8080

x-service-templates:
  api: &api
    build: .
    networks:
      - rinha
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '70MB'
    depends_on:
      nats:
        condition: service_healthy
      postgres:
        condition: service_healthy

services:
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    networks:
      - rinha
    ports:
      - '9999:9999'
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '20MB'

  api01:
    <<: *api
    container_name: api01
    environment:
      <<: *common-env
      SERVER_PORT: 8081

  api02:
    <<: *api
    container_name: api02
    environment:
      <<: *common-env
      SERVER_PORT: 8082

  nats:
    image: nats:2.11.6-alpine3.22
    container_name: nats
    hostname: nats
    networks:
      - rinha
    ports:
      - "4222:4222"
      - "8222:8222"
    environment:
      - NATS_ENABLE_AUTH=false
    command:
      - "--jetstream"
      - "-m"
      - "8222"
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '40MB'
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:8222/healthz" ]
      interval: 2s
      timeout: 2s
      retries: 5

  postgres:
    image: postgres:17-alpine
    container_name: psg
    restart: always
    hostname: psg
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: rinha
      POSTGRES_MAX_CONNECTIONS: 20
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/script.sql
    networks:
      - rinha
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 2s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '150MB'

networks:
  payment-processor:
    external: true
  rinha:
    driver: bridge